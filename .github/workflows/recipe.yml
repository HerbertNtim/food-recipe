name: Recipe Pipeline

on:
  push:
    branches:
      - "**"
  pull_request:
    branches:
      - "**"

jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache node modules
        uses: actions/cache@v4
        id: node_modules_cache
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('backend/package-lock.json') }}

      - name: Install dependencies
        if: steps.node_modules_cache.outputs.cache-hit != 'true'
        run: |
          echo "Cache miss, installing dependencies..."
          npm ci

      - name: Run lint and save output
        id: lint
        run: |
          npm run lint | tee lint-output.txt

      - name: Print lint output
        if: steps.lint.outcome == 'success'
        run: |
          echo "Lint output:"
          cat lint-output.txt
          echo "Linting completed successfully!"

      - name: Print lint error
        if: steps.lint.outcome == 'failure'
        run: |
          echo "❌ Linting failed. Please fix the issues before merging."
          cat lint-output.txt || echo "No output captured."

  build:
    needs: lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Restore node_modules cache
        uses: actions/cache@v4
        id: node_modules_cache
        with:
          path: backend/node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('backend/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build project
        id: build
        run: |
          npm run start
          echo "✅ Build completed successfully!"
      
      - name: Print build error
        if: steps.build.outcome == 'failure'
        run: |
          echo "❌ Build failed. Please check your code or configuration."
